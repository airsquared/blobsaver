/*
 * Copyright (c) 2021  airsquared
 *
 * This file is part of blobsaver.
 *
 * blobsaver is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3 of the License.
 *
 * blobsaver is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with blobsaver.  If not, see <https://www.gnu.org/licenses/>.
 */

import org.apache.tools.ant.filters.ReplaceTokens
import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
    id 'application'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'org.beryx.jlink' version '2.24.2'
    id 'org.openjfx.javafxplugin' version '0.0.10'

    id 'idea'
}
idea.module.outputDir file("out/production/classes") // fix running via IntelliJ

/*
 * REMEMBER: also update the version string in:
 *  - Main.java
 */
version = "3.0.3"
description = "A cross-platform GUI app for saving SHSH blobs"
String appIdentifier = "airsquared.blobsaver.app"
String copyright = "Copyright (c) 2021 airsquared"
def os = DefaultNativePlatform.currentOperatingSystem

startScripts.enabled = distZip.enabled = distTar.enabled = false

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.json', name: 'json', version: '20210307'
    implementation ('de.jangassen:nsmenufx:3.1.0') {
        exclude group: 'net.java.dev.jna', module: 'jna' //separate jna version
    }
    implementation 'net.java.dev.jna:jna-jpms:5.9.0'
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.21'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation group: 'org.testfx', name: 'openjfx-monocle', version: 'jdk-12.0.1+2'
}

javafx {
    version = '16'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

String addExports = '--add-exports=javafx.graphics/com.sun.javafx.css=airsquared.blobsaver'

compileJava {
    options.compilerArgs.add addExports
}

application {
    mainModule = "airsquared.blobsaver"
    mainClass = "airsquared.blobsaver.app.Main"
    applicationDefaultJvmArgs.add addExports
}

private String getJarDirectory() {
    String dir = ""
    if (DefaultNativePlatform.currentOperatingSystem.isMacOsX()) dir = "macos/Contents"
    else if (DefaultNativePlatform.currentOperatingSystem.isWindows()) dir = "windows/files"
    else if (DefaultNativePlatform.currentOperatingSystem.isLinux()) dir = "linux"
    return "${projectDir}/dist/${dir}"
}

run {
    systemProperty "jar.directory", getJarDirectory()
}

test {
    useJUnitPlatform()
    systemProperty "jar.directory", getJarDirectory()
    jvmArgs '--add-exports=javafx.graphics/com.sun.glass.ui=org.testfx.monocle', addExports
}

jlink {
    addOptions '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--strip-native-commands',
            '--dedup-legal-notices=error-if-not-same-content'
    launcher {
        jvmArgs = [ '-Djar.directory={{BIN_DIR}}', addExports ]
        noConsole = true
    }
    jpackage {
        imageOptions = [ '--copyright', copyright, '--description', description, '--vendor', 'airsquared']
        installerOutputDir = file("${buildDir}/distributions/")

        if (os.isMacOsX()) {
            installerType = "dmg"
            imageOptions.addAll '--mac-package-identifier', appIdentifier
            icon = "${projectDir}/dist/macos/Contents/Resources/blob.icns"
        } else if (os.isWindows()) {
            installerOptions.addAll '--win-dir-chooser', '--win-menu', '--win-shortcut'
            icon = "${projectDir}/dist/windows/blob.ico"
        } else {
            installerOptions.addAll '--linux-shortcut', '--linux-menu-group', 'Utility;Archiving;Java',
                    '--linux-rpm-license-type', 'GPLv3'
            icon = "${projectDir}/src/main/resources/airsquared/blobsaver/app/blob_emoji.png"
        }
    }
    if (os.isMacOsX()) jpackageImage.doLast {
        copy {
            from "${projectDir}/dist/macos/Contents/MacOS" into "${buildDir}/jpackage/blobsaver.app/Contents/MacOS"
        }
        copy {
            from "${projectDir}/dist/macos/Contents/Frameworks" into "${buildDir}/jpackage/blobsaver.app/Contents/Frameworks"
        }
        copy {
            from "${projectDir}/LICENSE", "${projectDir}/libraries_used.txt"
            into "${buildDir}/jpackage/blobsaver.app/Contents/Resources"
        }
        exec {
            commandLine "codesign", "--remove-signature", "${buildDir}/jpackage/blobsaver.app"
        }
    } else if (os.isWindows()) jpackageImage.doLast {
        copy {
            from "${projectDir}/dist/windows/files", "${buildDir}/jpackage/blobsaver/runtime/bin/zip.dll"
            rename "LICENSE_windows", "LICENSE"
            rename "libraries_used_windows.txt", "libraries_used.txt"
            into "${buildDir}/jpackage/blobsaver"
        }
    } else jpackageImage.doLast {
        copy {
            from "${projectDir}/dist/linux", "${projectDir}/LICENSE", "${projectDir}/libraries_used.txt"
            into "${buildDir}/jpackage/blobsaver/lib"
        }
    }

}

if (!os.isWindows()) {
    assemble.dependsOn jpackage
}

task createLinuxTargz(type: Tar, dependsOn: jpackageImage) {
    archiveFileName = "blobsaver-${project.version}.tar.gz"
    compression = Compression.GZIP
    destinationDirectory = file("${buildDir}/distributions/")
    from "${buildDir}/jpackage/blobsaver"

    if (os.isLinux()) {
        jpackage.finalizedBy createLinuxTargz
    }
}

task windowsInstaller(dependsOn: jpackageImage) { // requires inno setup to be installed
    doFirst {
        copy {
            from "${projectDir}/dist/windows/blobsaver.iss" into "${buildDir}/jpackage"
            filter(ReplaceTokens, tokens: [AppName: project.name, AppVersion: version, AppCopyright: copyright,
                                           OutputDir: "${buildDir}\\distributions".toString()])
        }
        exec {
            commandLine "iscc", "/Qp", "${buildDir}\\jpackage\\blobsaver.iss"
        }
        delete "${buildDir}/jpackage/blobsaver.iss"
    }

    if (os.isWindows()) {
        assemble.dependsOn windowsInstaller
    }
}
