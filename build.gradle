/*
 * Copyright (c) 2020  airsquared
 *
 * This file is part of blobsaver.
 *
 * blobsaver is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3 of the License.
 *
 * blobsaver is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with blobsaver.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'java'
    id 'edu.sc.seis.launch4j' version '2.4.6' // for bundling into .exe
    id "edu.sc.seis.macAppBundle" version "2.3.0" // for bundling into .app
    id 'com.github.johnrengelman.shadow' version '6.0.0' // for fat jar
    id 'com.github.ben-manes.versions' version '0.29.0'
}

version null
sourceCompatibility = 1.8

/*
 * REMEMBER: also update the version string in:
 *  - Main.java
 *  - blobsaver.iss
 */
String appVersion = "v2.5.3"

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.json', name: 'json', version: '20200518'
    implementation fileTree(dir: 'libs', include: ['*.jar'], excludes: ['**/sources/**'])
    implementation group: 'it.sauronsoftware', name: 'junique', version: '1.0.4'
    implementation "de.codecentric.centerdevice:centerdevice-nsmenufx:2.1.7"
    implementation 'net.java.dev.jna:jna:5.5.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
}

compileJava {
    options.fork = true
    options.forkOptions.javaHome = new File("${System.properties.'java.home'}")
    options.compilerArgs << "-XDignore.symbol.file=true"
}

jar {
    manifest {
        attributes 'Main-Class': 'airsquared.blobsaver.app.Main'
    }
    jar.enabled = false
    jar.finalizedBy shadowJar // make shadowJar always overwrite the jar task
}

shadowJar {
    archiveClassifier.set(null) // remove '-all' suffix
    // the jna libraries are bundled separately to reduce application size
    exclude "about.fxml", "about.css",
            "**/aix-ppc/*", "**/aix-ppc64/*", "**/linux-ppc/*", "**/linux-ppc64le/*", "**/linux-s390x/*", "**/linux-mips64el/*",
            "**/darwin/*", "**/win32-x86/*", "**/win32-x86-64/*", "**/openbsd-x86/*", "**/openbsd-x86-64/*",
            "**/freebsd-x86/*", "**/freebsd-x86-64/*", "**/sunos-sparc/*", "**/sunos-sparcv9/*", "**/sunos-x86/*", "**/sunos-x86-64/*"
    includeEmptyDirs = false
}

macAppBundle {
    mainClassName = "airsquared.blobsaver.app.Main"
    icon = "icons/blob_emoji.icns"
    backgroundImage = "icons/dmg_background.png"
    appName = 'blobsaver'
    dmgName = 'blobsaver-macos'
    volumeName = 'blobsaver-macos'
    jarTask = "shadowJar"
    bundleExtras.put("LSUIElement", "YES")
    createDmg.group = "build"
}

task copyFilesIntoMacApp(dependsOn: createApp) {
    inputs.files(createApp.outputs)
    inputs.dir("${projectDir}/dist/macos")
    inputs.files("${projectDir}/LICENSE", "${projectDir}/libraries_used.txt")
    outputs.dir("${buildDir}/macApp/blobsaver.app")

    doFirst {
        copy {
            from "${projectDir}/dist/macos/Frameworks"
            into "${buildDir}/macApp/blobsaver.app/Contents/Frameworks"
        }
        copy {
            from "${projectDir}/dist/macos/tsschecker"
            into "${buildDir}/macApp/blobsaver.app/Contents/MacOS"
        }
        copy {
            from "${projectDir}/LICENSE", "${projectDir}/libraries_used.txt"
            into "${buildDir}/macApp/blobsaver.app/Contents/Resources"
        }
    }
    createApp.finalizedBy copyFilesIntoMacApp
    group = "macappbundle"
}

task createLinuxTargz(type: Tar, dependsOn: shadowJar) {
    inputs.files(shadowJar.outputs)
    inputs.file("${buildDir}/libs/blobsaver.jar")
    inputs.dir("${projectDir}/dist/linux/")
    outputs.file("${buildDir}/distributions/blobsaver-linux.tar.gz")

    archiveFileName = "blobsaver-linux.tar.gz"
    compression = Compression.GZIP
    destinationDirectory = file("${buildDir}/distributions/")
    from "${buildDir}/libs/blobsaver.jar", "${projectDir}/dist/linux/"

    assemble.dependsOn createLinuxTargz
    group = "build"
}

launch4j { // Windows only, don't use this, use createWindowsInstaller
    mainClassName = "airsquared.blobsaver.app.Main"
    copyright = "Copyright (c) 2020  airsquared"
    downloadUrl = "https://github.com/airsquared/blobsaver/wiki/Making-sure-you-have-the-right-Java-version"
    icon = "${projectDir}/icons/blob_emoji.ico"
    mutexName = "airsquared.blobsaver.app"
    windowTitle = "blobsaver " + appVersion
    jreRuntimeBits = "64"
    jreMinVersion = "1.8.0"
    jreMaxVersion = "1.8.0_999"
    createExe.dependsOn shadowJar
}

// if your platform isn't Windows, wine is required to run this task
task createWindowsInstaller(dependsOn: createExe) {
    inputs.files(createExe.outputs)
    inputs.dir("${projectDir}/dist/windows/")
    inputs.file("${buildDir}/launch4j/blobsaver.exe")
    outputs.file("${buildDir}/distributions/blobsaver-windows.exe")

    doFirst {
        copy {
            from "${projectDir}/dist/windows/", "${buildDir}/launch4j/blobsaver.exe"
            into "${buildDir}/tmp/innosetup/"

            rename "LICENSE_windows", "LICENSE"
            rename "libraries_used_windows.txt", "libraries_used.txt"
        }
        new File("${buildDir}/distributions/").mkdirs()
        println "running Inno Setup Compiler"
        exec {
            workingDir = projectDir
            if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
                commandLine 'gradle\\InnoSetup6\\ISCC.exe', '/Qp', 'blobsaver.iss'
            } else {
                commandLine "wine", "gradle/InnoSetup6/ISCC.exe", "/Qp", "blobsaver.iss"
            }
        }
    }
    assemble.dependsOn createWindowsInstaller
    group = "build"
}
